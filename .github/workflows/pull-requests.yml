name: Auto Pull Requests

on:
  pull_request_target:
    types: [opened, reopened, edited]

permissions:
  pull-requests: write
  contents: write

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - name: Remove invited labels
        if: github.event.action != 'opened'
        uses: actions/github-script@v6.4.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          
          script: |
            const issue = context.payload.issue
            // remove All of the labels
            github.rest.issues.removeAllLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
            });
      - name: Add new labels
        uses: actions/github-script@v6.4.1
        with:
          script: |
            const issue = context.payload.issue

            const labelsToAdd = []
            const labelConditions = [
              {label: 'bugfix', keywords: ['Bug', 'bug', 'error', 'Error', 'fix', 'Fix']},
              {label: 'vulnerability', keywords: ['vulnerability', 'Vulnerability', 'leak', 'Leak']},
              {label: 'enhancement', keywords: ['suggestion', 'enhancement', 'feature request', 'Feature request', 'Feature Request']},
              {label: 'documentation', keywords: ['docs', 'documentation', 'Wiki', 'wiki']},
              {label: 'help wanted', keywords: ['help wanted']},
              {label: 'question', keywords: ['question', 'Question', 'Why', 'why', 'How', 'how']},
              {label: 'V1', keywords: ['V1', 'v1']},
              {label: 'V3', keywords: ['V3', 'v3']},
              {label: 'authentication', keywords: ['auth', 'Auth', 'token', 'Token', 'TOKEN', 'config', 'Config', 'CONFIG', 'Unauthorized', 'unauthorized', '401', '403', '502', '503', '500', 'forbidden', 'Forbidden', 'Access', 'access', 'block', 'Block']},
              {label: 'network', keywords: ['openai.com', 'ssl', 'SSL', 'HTTPS', 'Connection', 'connection', 'proxy', 'Proxy', 'PROXY', 'VPN']},
              {label: 'CLI', keywords: ['command program', 'Command Program', 'CLI', 'keybindings', 'Keybindings']},
              {label: 'Cloudflare', keywords: ['Cloudflare', 'cloudflare', 'cf']},
              {label: 'API', keywords: ['api', 'API']},
            ]

            // Add tags based on conditions
            for (const {label, keywords} of labelConditions) {
                for (const keyword of keywords) {
                    if (issue.title.includes(keyword)) {
                        labelsToAdd.push(label)
                        break
                    }
                }
            }

            if (labelsToAdd.length == 0) {
                labelsToAdd.push('triage-needed')
            }

            console.log("All of tags:", labelsToAdd)

            // Add tags
            github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              labels: labelsToAdd
            })
          github-token: ${{ secrets.GITHUB_TOKEN }}
  assignees:
    runs-on: ubuntu-latest
    if: github.event.sender.login != github.repository_owner
    steps:
      - name: Assign to dev branch
        if: github.base_ref != 'refs/heads/dev'
        uses: actions/github-script@v6.4.1
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const payload = context.payload

            github.rest.git.getRef({
              owner: payload.repository.owner.login,
              repo: payload.repository.name,
              ref: 'heads/dev'
            }).then(result => {
              const branchRef = result.data.ref;
              github.rest.pulls.update({
                owner: payload.repository.owner.login,
                repo: payload.repository.name,
                pull_number: payload.number,
                base: branchRef
              });
            }).catch(error => {
              console.log(error);
            });
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `**Hello**, Contributor!
              We've changed your target branch to dev branch, which is better for maintenance!
              Please make sure you've read our [contributing guide](https://github.com/acheong08/ChatGPT/blob/main/docs/CONTRIBUTING.md) and we look forward to reviewing your Pull request shortly âœ¨`
            })
