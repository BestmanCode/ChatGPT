name: Auto Pull Requests

on:
  pull_request_target:
    types: [opened, reopened]

permissions:
  pull-requests: write
  contents: write

jobs:
  welcome:
    runs-on: ubuntu-latest
    steps:
    - name: Welcome New Contributor
      uses: actions/github-script@v6.4.1
      with:
        github-token: ${{ secrets.GH_TOKEN }}
        script: |
          // Get a list of all issues created by the PR opener
          // See: https://octokit.github.io/rest.js/#pagination
          const creator = context.payload.sender.login
          const opts = github.rest.issues.listForRepo.endpoint.merge({
            ...context.issue,
            creator,
            state: 'all'
          })
          const issues = await github.paginate(opts)

          for (const issue of issues) {
            if (issue.number === context.issue.number) {
              continue
            }

            if (issue.pull_request) {
              return // Creator is already a contributor.
            }
          }

          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `**Welcome**, new contributor!
            Your PR will review by ${reviewer}
            Please make sure you've read our [contributing guide](https://github.com/acheong08/ChatGPT/blob/main/docs/CONTRIBUTING.md) and we look forward to reviewing your Pull request shortly ✨`
          })
  assignees:
    runs-on: ubuntu-latest
    steps:
      - name: Assign Reviewer
        uses: actions/github-script@v6.4.1
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const reviewers = ['acheong08'];
            const reviewer = reviewers[Math.floor(Math.random() * reviewers.length)];
            github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.number,
              reviewers: [reviewer]
            }).catch(error => {
              console.log(error);
            });

            await github.rest.issues.createComment({
              issue_number: context.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Automated:
                **Welcome**.
                Your PR will reviewed shortly by @${reviewer}
                Thank you for your contribution. ✨
              `
            })
      - name: Assign to dev branch
        if: github.ref != 'refs/heads/dev'
        uses: actions/github-script@v6.4.1
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const payload = context.payload
            const prNumber = payload.number
            const repoName = payload.repository.name
            const ownerName = payload.repository.owner.login
            const branchName = 'dev'
            console.log(payload.repository.name, payload.repository.owner.login)


            github.rest.git.getRef({
              owner: ownerName,
              repo: repoName,
              ref: `heads/${branchName}`
            }).then(result => {
              const branchRef = result.data.ref;
              github.rest.pulls.update({
                owner: ownerName,
                repo: repoName,
                pull_number: prNumber,
                base: branchRef
              });
            }).catch(error => {
              console.log(error);
            });
